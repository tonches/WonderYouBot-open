import telebot
import config
import hardsql
import dbworker
import logging
import time
import json
import os.path
import hashlib
import requests
from pathlib import Path
import sys

bot = telebot.TeleBot(config.token)


logging.basicConfig(format='%(asctime)s - %(name)s - %(levelname)s - %(message)s',
                    level=logging.INFO)

logger = logging.getLogger(__name__)

def isstas(groupid):
    if groupid == -1001156429380:
        return True
    else:
        return False


def extract_unique_code(text):
    # Extracts the unique_code from the sent /start command.
    return text.split()[1] if len(text.split()) > 1 else None

# –ù–∞—á–∞–ª–æ –¥–∏–∞–ª–æ–≥–∞
@bot.message_handler(commands=["start"])
def cmd_start(message):
    if message.text != '/start':
        unique_code = extract_unique_code(message.text)
    else:
        unique_code = extract_unique_code("/start none")

    if hashlib.md5(unique_code.encode()).hexdigest() == '6050ce63e4bce6764cb34cac51fb44d1':
        state = dbworker.get_current_state(message.from_user.id)
        logger.warning('Command from:  "%s"', message.from_user.id)
        logger.warning('Command from chat:  "%s"', message.chat.id)
        logger.warning('Name of chat:  "%s"', message.chat.title)
        statuses = ['creator', 'administrator', 'member']
        status = bot.get_chat_member(message.chat.id, message.from_user.id).status
        if any(st == status for st in statuses):
            bot.send_message(message.chat.id, "–ü–æ–¥–ø–∏—Å–∫–∞ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∞!")
        else:
            bot.send_message(message.chat.id, "–ö–∞–∂–µ—Ç—Å—è –≤—ã –Ω–µ –ø–æ–¥–ø–∏—Å–∞–ª–∏—Å—å!")
        

        if state == config.States.S_ENTER_NAME.value:
            bot.send_message(message.chat.id, "–ö–∞–∂–µ—Ç—Å—è, –∫—Ç–æ-—Ç–æ –æ–±–µ—â–∞–ª –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —Å–≤–æ—ë –∏–º—è, –Ω–æ —Ç–∞–∫ –∏ –Ω–µ —Å–¥–µ–ª–∞–ª —ç—Ç–æ–≥–æ :( –ñ–¥—É...")
        elif state == config.States.S_ENTER_EGO.value:
            bot.send_message(message.chat.id, "–ö–∞–∂–µ—Ç—Å—è, –∫—Ç–æ-—Ç–æ –æ–±–µ—â–∞–ª –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —Å–≤–æ–π –ø—Å–µ–≤–¥–æ–Ω–∏–º, –Ω–æ —Ç–∞–∫ –∏ –Ω–µ —Å–¥–µ–ª–∞–ª —ç—Ç–æ–≥–æ :( –ñ–¥—É...")
        elif state == config.States.S_SEND_EMO.value:
            bot.send_message(message.chat.id, "–ö–∞–∂–µ—Ç—Å—è, –∫—Ç–æ-—Ç–æ –æ–±–µ—â–∞–ª –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —Å–≤–æ–π —ç–º–æ–¥–∑–∏, –Ω–æ —Ç–∞–∫ –∏ –Ω–µ —Å–¥–µ–ª–∞–ª —ç—Ç–æ–≥–æ :( –ñ–¥—É...")
        else:  # –ü–æ–¥ "–æ—Å—Ç–∞–ª—å–Ω—ã–º" –ø–æ–Ω–∏–º–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ "0" - –Ω–∞—á–∞–ª–æ –¥–∏–∞–ª–æ–≥–∞
            if hardsql.check_name("names", str(message.from_user.id)) != True:
                logger.warning('Id:  "%s", in db: "%s"', message.from_user.id, hardsql.check_name("names", str(message.from_user.id)))
                bot.send_message(message.chat.id, "–ü—Ä–∏–≤–µ—Ç! –ö–∞–∫ —è –º–æ–≥—É –∫ —Ç–µ–±–µ –æ–±—Ä–∞—â–∞—Ç—å—Å—è?")
                dbworker.set_state(message.from_user.id, config.States.S_ENTER_NAME.value)
            else:
                bot.send_message(message.chat.id, "–ü—Ä–∏–≤–µ—Ç! –Ø —Ç–µ–±—è –∑–Ω–∞—é - –µ—Å–ª–∏ –ø—Ä–æ—á–∏—Ç–∞–ª –ë–∏–±–ª–∏—é, —Ç–æ –Ω–∞–ø–∏—à–∏ –º–Ω–µ /read. Read –∑–∞ –≤—á–µ—Ä–∞ - /yesterday. –û—Å—Ç–∞–ª—å–Ω—ã–µ –Ω–µ–º–∞–ª–æ–≤–∞–∂–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã - /help")
    else:
        bot.send_message(message.chat.id, "–¢—ã –ø—Ä–æ—Å–∏—à—å –º–µ–Ω—è –æ–± —É—Å–ª—É–≥–µ, –Ω–æ –¥–µ–ª–∞–µ—à—å —ç—Ç–æ –±–µ–∑ —É–≤–∞–∂–µ–Ω–∏—è...")


# –ü–æ –∫–æ–º–∞–Ω–¥–µ /reset –±—É–¥–µ–º —Å–±—Ä–∞—Å—ã–≤–∞—Ç—å —Å–æ—Å—Ç–æ—è–Ω–∏—è, –≤–æ–∑–≤—Ä–∞—â–∞—è—Å—å –∫ –Ω–∞—á–∞–ª—É –¥–∏–∞–ª–æ–≥–∞
@bot.message_handler(commands=["reset"])
def cmd_reset(message):
    bot.send_message(message.chat.id, "–ß—Ç–æ –∂, –Ω–∞—á–Ω—ë–º –ø–æ-–Ω–æ–≤–æ–π. –ö–∞–∫ —Ç–µ–±—è –∑–æ–≤—É—Ç?")
    dbworker.set_state(message.from_user.id, config.States.S_ENTER_NAME.value)

@bot.message_handler(commands=["cool"])
def cmd_reset(message):
    bot.send_message(message.chat.id, "–°–ø–∞—Å–∏–±–æ, —Å—Ç–∞—Ä–∞—é—Å—å)")

@bot.message_handler(commands=["crazy"])
def cmd_reset(message):
    bot.send_message(message.chat.id, "–ï—Å—Ç—å –Ω–µ–º–Ω–æ–≥–æ)")


@bot.message_handler(commands=["help"])
def cmd_help(message):
    if hardsql.check_name("names", str(message.from_user.id)) != True:
        logger.warning('Id:  "%s", in db: "%s"', message.from_user.id, hardsql.check_name("names", str(message.from_user.id)))
        bot.send_message(message.chat.id, "–ü—Ä–∏–≤–µ—Ç! –ö–∞–∫ —è –º–æ–≥—É –∫ —Ç–µ–±–µ –æ–±—Ä–∞—â–∞—Ç—å—Å—è?")
        dbworker.set_state(message.from_user.id, config.States.S_ENTER_NAME.value)
    else:
        bot.send_message(message.chat.id, "–ô–æ—É üê≥, —Å–ø—Ä–∞–≤–∫–∞ –ø–æ –º–æ–∏–º –∫–Ω–æ–ø–æ—á–∫–∞–º: \n\nüìñ –∑–∞–ø–∏—Å–∞—Ç—å—Å—è –≤ —Ç–∞–±–ª–∏—á–∫—É –ø–æ —á—Ç–µ–Ω–∏—é –ë–∏–±–ª–∏–∏ -  /read \nüò¥ read –∑–∞ –≤—á–µ—Ä–∞ - /yesterday. \n‚úçüèª –ø–æ–º–µ–Ω—è—Ç—å –∏–º—è –≤ —Ç–∞–±–ª–∏—Ü–µ - /change \n‚ùî —Ç–≤–æ–µ –∏–º—è —Å–µ–π—á–∞—Å - /name \nüìä –ø–æ–ª—É—á–∏—Ç—å —Å–≤–æ—é —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –∑–∞ –º–µ—Å—è—Ü: /report \nüóì –∑–∞–∫–∞–∑–∞—Ç—å –Ω–æ–≤—É—é —Ç–∞–±–ª–∏—á–∫—É –∑–∞ –º–µ—Å—è—Ü: /tablenew \nüî¶ –ø—Ä–æ—Å—Ç–æ –ø–æ–ª—É—á–∏—Ç—å —Ç–∞–±–ª–∏—á–∫—É: /table")



# –ü–æ –∫–æ–º–∞–Ω–¥–µ /read –±—É–¥–µ–º —Ñ–∏–∫—Å–∏—Ä–æ–≤–∞—Ç—å –ø—Ä–æ—á—Ç–µ–Ω–∏–µ –ë–∏–±–ª–∏–∏
@bot.message_handler(commands=["read"])
def cmd_read(message):
    if hardsql.check_name("names", str(message.from_user.id)) != True:
        bot.send_message(message.chat.id, "–ü—Ä–∏–≤–µ—Ç, —Å–∫–∞–∂–∏ —Å–Ω–∞—á–∞–ª–∞ –∫–∞–∫ —Ç–µ–±—è –∑–æ–≤—É—Ç?")
        dbworker.set_state(message.from_user.id, config.States.S_ENTER_NAME.value)
    else:
        if message.chat.id == -1001156429380: #hardcode for experienced tourists 
            groupid = 0
        else:
            groupid = message.chat.id
        logger.warning('Command from chat:  "%s"', groupid)
        if hardsql.check_column(str(message.from_user.id)) != True:
            hardsql.add_column(str(message.from_user.id))    #–¥–æ–±–∞–≤–ª—è–µ–º —Å—Ç–æ–ª–±–µ—Ü –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è

            if hardsql.in_group(message.from_user.id, groupid) != True:
                hardsql.attend_to_group(message.from_user.id, groupid)

            bot.send_message(message.chat.id, "–°—É–ø–µ—Ä, –∑–∞–ø–∏—Å—ã–≤–∞—é!")
            hardsql.add_new_row(int(message.from_user.id), 0)
        else:

            if hardsql.in_group(message.from_user.id, groupid) != True:
                logger.warning('Not in group')
                hardsql.attend_to_group(message.from_user.id, groupid)
            else:
                logger.warning('in group')
            bot.send_message(message.chat.id, "–°—É–ø–µ—Ä, –∑–∞–ø–∏—Å—ã–≤–∞—é!")
            hardsql.add_new_row(int(message.from_user.id), 0)

@bot.message_handler(commands=["yesterday"])
def cmd_yesterday(message):
    if hardsql.check_name("names", str(message.from_user.id)) != True:
        bot.send_message(message.chat.id, "–ü—Ä–∏–≤–µ—Ç, —Å–∫–∞–∂–∏ —Å–Ω–∞—á–∞–ª–∞ –∫–∞–∫ —Ç–µ–±—è –∑–æ–≤—É—Ç?")
        dbworker.set_state(message.from_user.id, config.States.S_ENTER_NAME.value)
    else: 
        if hardsql.check_column(str(message.from_user.id)) != True:
            hardsql.add_column(str(message.from_user.id))    #–¥–æ–±–∞–≤–ª—è–µ–º —Å—Ç–æ–ª–±–µ—Ü –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è

            if hardsql.in_group(message.from_user.id, message.chat.id) != True:
                hardsql.attend_to_group(message.from_user.id, message.chat.id)

            bot.send_message(message.chat.id, "–°—É–ø–µ—Ä, –∑–∞–ø–∏—Å—ã–≤–∞—é –≤—á–µ—Ä–∞—à–Ω–∏–º —á–∏—Å–ª–æ–º!")
            hardsql.add_new_row(int(message.from_user.id), 24)
        else:
            if hardsql.in_group(message.from_user.id, message.chat.id) != True:
                logger.warning('Not in group')
                hardsql.attend_to_group(message.from_user.id, message.chat.id)
            else:
                logger.warning('in group')
            bot.send_message(message.chat.id, "–°—É–ø–µ—Ä, –∑–∞–ø–∏—Å—ã–≤–∞—é –≤—á–µ—Ä–∞—à–Ω–∏–º —á–∏—Å–ª–æ–º!")
            hardsql.add_new_row(int(message.from_user.id), 24)

@bot.message_handler(commands=["change"])
def cmd_change(message):
    if hardsql.check_name("names", str(message.from_user.id)) != True:
        bot.send_message(message.chat.id, "–ü—Ä–∏–≤–µ—Ç, –Ω–∞–ø–∏—à–∏ —Ç–≤–æ–µ –∏–º—è!")
        dbworker.set_state(message.from_user.id, config.States.S_ENTER_NAME.value)
    else:
        bot.send_message(message.chat.id, "–ü—Ä–∏–≤–µ—Ç, –Ω–∞–ø–∏—à–∏ –Ω–æ–≤–æ–µ –∏–º—è!")
        dbworker.set_state(message.from_user.id, config.States.S_CHANGE_NAME.value)

@bot.message_handler(commands=["name"])
def get_name(message):
    if hardsql.check_name("names", str(message.from_user.id)) != True:
        bot.send_message(message.chat.id, "–ü—Ä–∏–≤–µ—Ç, —Ç—ã –Ω–æ–≤–µ–Ω—å–∫–∏–π. –ù–∞–ø–∏—à–∏ —Å–≤–æ—ë –∏–º—è!")
        dbworker.set_state(message.from_user.id, config.States.S_ENTER_NAME.value)
    else:
        myname = hardsql.get_name(message.from_user.id)
        bot.send_message(message.chat.id, "–¢—ã –∑–∞–ø–∏—Å–∞–Ω –∫–∞–∫: " + myname)

@bot.message_handler(commands=["report"])
def get_report(message):
    if hardsql.check_name("names", str(message.from_user.id)) != True:
        bot.send_message(message.chat.id, "–ü—Ä–∏–≤–µ—Ç, –Ω–∞–ø–∏—à–∏ —Ç–≤–æ–µ –∏–º—è!")
        dbworker.set_state(message.from_user.id, config.States.S_ENTER_NAME.value)
    else:
        rep = hardsql.get_report(message.from_user.id, 'personal')
        bot.send_message(message.chat.id, '–í —ç—Ç–æ–º –º–µ—Å—è—Ü–µ —Ç—ã –≤ –°–ª–æ–≤–µ –Ω–∞ ' + str(rep) + '%')

@bot.message_handler(commands=["table"])
def get_greport(message):
    if hardsql.check_name("names", str(message.from_user.id)) != True:
        bot.send_message(message.chat.id, "–ü—Ä–∏–≤–µ—Ç, –Ω–∞–ø–∏—à–∏ —Ç–≤–æ–µ –∏–º—è!")
        dbworker.set_state(message.from_user.id, config.States.S_ENTER_NAME.value)
    else:
        if message.chat.id == -1001156429380: #hardcode for experienced tourists 
            groupid = 0
        else:
            groupid = message.chat.id

        if hardsql.check_id(groupid) != True:
            bot.send_message(message.chat.id, "–°–Ω–∞—á–∞–ª–∞ –∑–∞–∫–∞–∂–∏ —Ç–∞–±–ª–∏—á–∫—É: /tablenew")
        else:
            cid = hardsql.increment_id(groupid, 'get')         
            fullpath = config.out_path + "read_" + str(groupid) + "_" + str(cid - 1) + ".pdf"
            my_file = Path(fullpath)
            if my_file.is_file():
                #bot.send_message(message.chat.id, "–ê —Ñ–∞–π–ª–∏–∫ —Ç–æ —É–∂–µ –æ—Ñ–æ—Ä–º–ª–µ–Ω!")
                doc = open(fullpath, 'rb')
                bot.send_document(message.chat.id, doc)
            else:
                bot.send_message(message.chat.id, "–ü–æ–∫–∞ –Ω–µ –≥–æ—Ç–æ–≤–æ...")
            #doc = open('/tmp/file.txt', 'rb')


@bot.message_handler(commands=["tablenew"])
def get_nreport(message):
    if hardsql.check_name("names", str(message.from_user.id)) != True:
        bot.send_message(message.chat.id, "–ü—Ä–∏–≤–µ—Ç, –Ω–∞–ø–∏—à–∏ —Ç–≤–æ–µ –∏–º—è!")
        dbworker.set_state(message.from_user.id, config.States.S_ENTER_NAME.value)
    else:
        if message.chat.id == -1001156429380: #hardcode for experienced tourists 
            groupid = 0
        else:
            groupid = message.chat.id
        
        logger.warning('tablenew from chat:  "%s"', groupid)
        logger.warning('tablenew groupid type:  "%s"', type(groupid))

        if hardsql.check_id(groupid) != True: #add groupid to ids if not exists
            hardsql.add_id(groupid)
        

        cid = hardsql.increment_id(groupid, 'get')
        names = []
        content = []
        times = hardsql.get_times('series')
        ids = hardsql.get_names()
        grouphash = hardsql.get_groups()



        for _id in ids:
            if grouphash[_id] is not None:
                if groupid in grouphash[_id]: #check if user is related to group
                    names.append({"name": hardsql.get_name(_id)})
                    rep = hardsql.get_report(_id, 'global')
                    content.append({"content": rep})       
        _json = {"id": cid, "gid": groupid, "period": 1, "wgroup": message.chat.title, "title": times, "names": names, "content": content}
        logger.warning(_json)


        filename = config.report + str(groupid) + '.json'
        fnamerep = "reads_data" + str(groupid) + '.json'
        
        with open(filename, 'w') as outfile: #create separate file for each chat
            json.dump(_json, outfile)


        try:
            r = requests.get("http://report:3000/generate-report?filename=" + fnamerep)
        except requests.exceptions.RequestException as e:
            print(f"\nOOOPS! It seems something went wrong...\n{e}")
            return
        if r.status_code == 200:
            hardsql.increment_id(groupid, 'add')       
            bot.send_message(message.chat.id, "–ì–æ—Ç–æ–≤–ª—é –æ—Ç—á–µ—Ç –∑–∞ –º–µ—Å—è—Ü. –ü—Ä–∏—Ö–æ–¥–∏ —á–µ—Ä–µ–∑ –º–∏–Ω—É—Ç—É –∑–∞ –Ω–æ–≤–æ–π —Ç–∞–±–ª–∏—á–∫–æ–π: /table")
        else:
            bot.send_message(message.chat.id, "–ß—Ç–æ-—Ç–æ –Ω–µ —Ç–∞–∫ —Å –Ω–∞—à–∏–º –ø–∏—Å–∞—Ç–µ–ª–µ–º –æ—Ç—á–µ—Ç–æ–≤, –Ω–æ —Å —Å–µ–∫—Ä–µ—Ç–∞—Ä–µ–º –≤—Å–µ —Ö–æ—Ä–æ—à–æ")
            print(f"\nUnexpected response: {str(r.status_code)} {r.text}")
            return


@bot.message_handler(func=lambda message: dbworker.get_current_state(message.from_user.id) == config.States.S_ENTER_NAME.value)
def user_entering_name(message):
    #bot.send_message(message.chat.id, "–û—Ç–ª–∏—á–Ω–æ–µ –∏–º—è, –∑–∞–ø–æ–º–Ω—é! –¢–µ–ø–µ—Ä—å —É–∫–∞–∂–∏, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞, —Å–≤–æ–π –ø—Å–µ–≤–¥–æ–Ω–∏–º.")
    #dbworker.set_state(message.from_user.id, config.States.S_ENTER_EGO.value)
    logger.warning('Id:  "%s", name: "%s"', message.from_user.id, message.text)
    if len(message.text) > 10:
        bot.send_message(message.chat.id, "–î–∞–≤–∞–π –ø–æ–∫–æ—Ä–æ—á–µ, –º–∞–∫—Å–∏–º—É–º 10 —Å–∏–º–≤–æ–ª–æ–≤")
    else:
        hardsql.insert_name(message.from_user.id, message.text)
        if hardsql.check_column(str(message.from_user.id)) != True:
            hardsql.add_column(str(message.from_user.id))
        bot.send_message(message.chat.id, "–û—Ç–ª–∏—á–Ω–æ, —Ç–µ–ø–µ—Ä—å —Ç—ã –∑–∞–ø–∏—Å–∞–Ω! –ë–æ–ª—å—à–µ –æ—Ç —Ç–µ–±—è –Ω–∏—á–µ–≥–æ –Ω–µ —Ç—Ä–µ–±—É–µ—Ç—Å—è. –¢–µ–ø–µ—Ä—å –º–æ–∂–µ—à—å –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —Å–≤–æ–π /read. –û—Å—Ç–∞–ª—å–Ω—ã–µ –Ω–µ–º–∞–ª–æ–≤–∞–∂–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã - /help")
        dbworker.set_state(message.from_user.id, config.States.S_START.value)

@bot.message_handler(func=lambda message: dbworker.get_current_state(message.from_user.id) == config.States.S_CHANGE_NAME.value)
def user_changing_name(message):
    logger.warning('Id:  "%s", name: "%s"', message.from_user.id, message.text)
    if len(message.text) > 10:
        bot.send_message(message.chat.id, "–î–∞–≤–∞–π –ø–æ–∫–æ—Ä–æ—á–µ, –º–∞–∫—Å–∏–º—É–º 10 —Å–∏–º–≤–æ–ª–æ–≤")
    else:
        if hardsql.check_same(message.text) != True:
            hardsql.change_name(message.from_user.id, message.text)
            bot.send_message(message.chat.id, "–û—Ç–ª–∏—á–Ω–æ, –∏–º—è —è –ø–æ–º–µ–Ω—è–ª! –¢–µ–ø–µ—Ä—å —É —Ç–µ–±—è –Ω–æ–≤–æ–µ –∏–º—è –≤ —Ç–∞–±–ª–∏—á–∫–µ)")
            dbworker.set_state(message.from_user.id, config.States.S_START.value)
        else:
            bot.send_message(message.chat.id, "–ö—Ç–æ-—Ç–æ —É–∂–µ –∑–∞–Ω—è–ª —ç—Ç–æ –∏–º—è... –í–æ–∑–º–æ–∂–Ω–æ \"–∫—Ç–æ-—Ç–æ\" —ç—Ç–æ —Ç—ã :) –ü–æ–ø—Ä–æ–±—É–π –¥—Ä—É–≥–æ–µ")


if __name__ == "__main__":
    bot.infinity_polling()